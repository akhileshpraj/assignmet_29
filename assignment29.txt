1
#include<iostream>
using namespace std;
class complex
{
    int real,img;
    public:
    void display()
    {
        cout<<"real = "<<real<< " img = "<<img<<endl;
    }
    complex()
    {

    }
    complex(int x)
    {
        real=x;
        img=x;
    }
};
int main()
{
    complex c1;
    int x=5;
    c1=x;
    c1.display();
}

2
#include<iostream>
using namespace std;
class Complex
{
    int real;
    int img;
    public:
    void display()
    {
        cout<<"real = "<<real<<" img = "<<img<<endl;

    }
    void setData(int x,int y)
    {
        real=x;
        img=y;
    }
    Complex()
    {

    }
    operator int()
    {
        return (real+img);
    }
   explicit operator long()
    {
        cout<<"int()  called "<<endl;
        return (real+img);
    }
};
 int main()
{
 Complex c1;

 c1.setData(3,4);
 int x;
 x=c1;
 c1.display();
 cout<<c1;
 return 0;
}

3
#include<iostream>
using namespace std;
class product
{
    int x,y;
    public:
    product(int a,int b)
    {
        x=a;
        y=b;
    }
    void display()
    {
        cout<<"x = "<<x<<" y ="<<y<<endl;
    }
    int GetX()
    {
        return x;
    }
    int GetY()
    {
        return y;
    }
};
class item
{
    int i;
    public:
    void display()
    {
        cout<<"item i = "<<i<<endl;
    }
    item(product p)
    {
        cout<<" item (product) called "<<endl;
        i=p.GetX()+p.GetY();
    }
    item()
    {

    }
};
int main()
{
    product p1(7,9);
    item i;
    i=p1;
    p1.display();
    i.display();
    cout<<endl;
    return 0;
}

4
#include<iostream>
using namespace std;
class Item
{
    int i;
    public:
    Item(int x)
    {
        i=x;
    }
    Item()
    {

    }
    Item operator=(Item i)
    {
        cout<<" Assignment called ";
        return Item();
    }
    void display()
    {
        cout<<" item i = "<<i<<endl;
    }
};
class product
{
    int x,y;
    public:
    product(int a,int b)
    {
        x=a,y=b;
    }
    void display()
    {
        cout<<" x = "<<x<<" y= "<<y<<endl;
    }
    int getx()
    {
        return x;
    }
    int gety()
    {
        return y;
    }
    operator Item()
    {
        Item i(x+y);
        return i;
    }
};
int main()
{
    product p1(3,4);
    Item i=p1;
    p1.display();
    i.display();
    cout<<endl;
    return 0;
}

6
#include<iostream>
using namespace std;
class Time
{
    float hour;
    float min;
    public:
    Time()
    {

    }
    Time (int duration)
    {
        hour = duration/3600;
        min = duration % 3600;
    }
    void display()
    {
        cout<<" hour = "<<hour<<" min = "<<min<<endl;
    }
};
int main()
{
    Time duration = 4000;
    Time t=duration;
    t.display();
    cout<<endl;
    return 0;
}

8
#include<iostream>
using namespace std;
class Dollor
{
    float d;
    public:
    Dollor(){}
    Dollor(int b)
    {
        d=b;
    }
    void display1()
    {
        cout<<d<<endl;
    }
    operator float()
    {
        return d;
    }
    float getd()
    {
        return d;
    }
};
class rupee
{
    float x;
    public:
    rupee(){}
    rupee(float y)
    {
        x=y;
    }
    void display()
    {
        cout<<"rupee is " <<x<<endl;
    }
    operator float()
    {
        return x;
    }
    rupee (Dollor d1)
    {
        cout<<"rupees(DOLLOR )for rupes";
        x=d1.getd()*100;
    }
    operator Dollor()
    {
        cout<<"Dollor called for rupee";
        return  x/100;
    }
};
int main()
{
    float n=5;
    rupee r1=n;
    r1.display();
    cout<<endl;
    float z;
    z=(float)r1;
    cout<<z<<endl;
    float f=20;
    Dollor d1=f;
    d1.display1();
    float m;
    m=(float)d1;
    cout<<m<<endl;;

    r1=(rupee)d1;
    r1.display();

    d1=r1;
    d1.display1();

}